<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- sK1 2 1
00002828 -->
<svg xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.0" width="300" height="300">
<image y="0.0"  x="0.0" xlink:href="data:image/png;base64,

"  height="300" width="300" />
<!-- Encapsulated SK2
obj('Document')
set('styles',{'Default Style': [[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []], 'Default Text Style': [[1, 0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black']], [], ['Sans', 'Regular', 12.0, 0, [], True]]})
set('doc_units','px')
set('metainfo',['', '', '', ''])
set('doc_origin',1)
set('resources',{})
obj('Pages')
set('page_counter',1)
set('page_format',['A4', (595.275590551181, 841.8897637795275), 0])
obj('Page')
set('name','Page 1')
set('page_format',['Icon 16x16', (16.0, 16.0), 0])
set('layer_counter',1)
obj('Layer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.19607843137254902, 0.3215686274509804, 0.6352941176470588], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','Layer 1')
set('color',[0.19607843137254902, 0.3215686274509804, 0.6352941176470588, 1.0])
set('properties',[1, 1, 1, 1])
obj('Curve')
set('paths',[[[4.660930685029085, 3.450755080666168], [[[3.4728888312529893, 5.000233760127584], [1.6029051676236765, 5.999483252787716], [-0.5, 5.999483252787716], 4], [[-4.088958152744406, 5.999483252787716], [-6.999483252787716, 3.088958152744407], [-6.999483252787716, -0.5], 4], [[-6.999483252787716, -4.088958152744406], [-4.088958152744406, -6.999483252787716], [-0.5, -6.999483252787716], 4]], 0]])
set('style',[[], [0, 1.5, ['RGB', [0.0, 0.0, 0.0], 1.0, 'Black'], [], 2, 0, 10.433, 0, 0, []], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[-1.0, 0.0, 0.0, 1.0, 0.0, 0.0])
end()
obj('Curve')
set('paths',[[[-6.98187549251379, -5.957446808510638], [[-4.018912529550827, -3.057525610717099], [-4.018912529550827, -5.957446808510638], [-6.98187549251379, -5.957446808510638]], 1]])
set('style',[[1, 0, ['RGB', [0.0, 0.0, 0.0], 1.0, 'Black']], [], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[-2.0263852242744056, 0.0, 0.0, 2.070080862533693, -15.145118733509232, 13.331536388140163])
end()
obj('Curve')
set('paths',[[[-1.0, -1.0], [[-1.0, -5.0]], 0]])
set('style',[[], [0, 0.7, ['RGB', [1.0, 0.0, 0.0], 1.0, ''], [], 2, 0, 10.433, 0, 0, []], [], []])
set('stroke_trafo',[])
set('trafo',[-1.25, 0.0, 0.0, 1.25, -0.75, 0.25])
end()
obj('Curve')
set('paths',[[[-3.0, -3.0], [[1.0, -3.0]], 0]])
set('style',[[], [0, 0.7, ['RGB', [1.0, 0.0, 0.0], 1.0, ''], [], 2, 0, 10.433, 0, 0, []], [], []])
set('stroke_trafo',[])
set('trafo',[-1.25, 0.0, 0.0, 1.25, -0.75, 0.25])
end()
end()
end()
end()
obj('DesktopLayers')
end()
obj('MasterLayers')
end()
obj('GridLayer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.0, 0.0, 1.0], 0.15, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','GridLayer')
set('color',[0.0, 0.0, 1.0, 0.15])
set('grid',[0.0, 0.0, 1.0, 1.0])
set('properties',[1, 0, 0, 1])
end()
obj('GuideLayer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.0, 0.3176470588235294, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','GuideLayer')
set('color',[0.0, 0.3176470588235294, 1.0, 1.0])
set('properties',[1, 1, 0, 0])
end()
end()
-->
</svg>
